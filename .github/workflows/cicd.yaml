name: cicd

on:
  push:
    branches:
      - test
  pull_request: 
    branches:  
      - test

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build project
        run: mvn -B package --file pom.xml
      
      - name: Run test
        run: echo "no test"

  version:
    runs-on: ubuntu-latest
    needs: [check]
    if: success()
    permissions: 
      contents: write
    outputs:
      new_version: ${{ steps.version.outputs.new_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Grants permisions
        run: chmod +x ./bin/version.sh

      - name: Change version
        id: version
        run: echo "new_version=$(./bin/version.sh "${{ github.event.head_commit.message }}")" >> $GITHUB_OUTPUT

      - name: Update version file
        run: |
          git config --global user.name 'diegomated1'
          git config --global user.email 'diegocardwr@gmail.com'
          git add .
          git commit -am "chore: version ${{ steps.version.outputs.new_version }}"
          git push

      - name: Merge test to main
        uses: devmasx/merge-branch@master
        with:
          type: now
          target_branch: main
          github_token: ${{ secrets.GITHUB_TOKEN }}
          
  release:
    runs-on: ubuntu-latest
    needs: [version]
    if: success()
    permissions: 
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ needs.version.outputs.new_version }}
          tag_name: ${{ needs.version.outputs.new_version }}

  publish:
    runs-on: ubuntu-latest
    needs: [version]
    if: success()
    permissions: 
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: diegomated1
          password: ${{ secrets.DH_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: diegomated1/mediafile-authentication-service:${{ needs.version.outputs.new_version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: [publish, version]
    steps:
    - uses: actions/checkout@v4

    - name: Deploy docker
      uses: appleboy/ssh-action@v1.0.3
      with:
        
        host: ${{ secrets.DEPLOY_HOST }}
        port: ${{ secrets.DEPLOY_PORT }}
        username: ${{ secrets.DEPLOY_USERNAME }}
        key: ${{ secrets.DEPLOY_KEY }}

        proxy_host: ${{ secrets.DEPLOY_PROXY_HOST }}
        proxy_port: ${{ secrets.DEPLOY_PROXY_PORT }}
        proxy_username: ${{ secrets.DEPLOY_PROXY_USERNAME }}
        proxy_key: ${{ secrets.DEPLOY_PROXY_KEY }}

        envs: MARIA_USER,MARIA_PASSWORD,APP_VERSION

        script: |
          cd  mediafile-authentication-service
          git pull origin main
          
          docker build -t mediafile_mariadb:latest ./db

          docker compose down
          docker compose up -d

      env:
        MARIA_USER: root
        MARIA_PASSWORD: ${{secrets.MARIA_PASSWORD}}
        APP_VERSION: ${{ needs.version.outputs.new_version }}